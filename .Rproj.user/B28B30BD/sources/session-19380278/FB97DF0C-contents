---
title: "Untitled"
format: html
editor: visual
---

```{r setup}
library(tidyverse)
library(ape)
library(ggtree)
```

# Bony fish and sharks/rays

Download the trees:

```{r}
download.file('https://static-content.springer.com/esm/art%3A10.1186%2Fs12862-017-0958-3/MediaObjects/12862_2017_958_MOESM2_ESM.tre', 'betancur_r.tre')
```
```{r}
download.file('https://data.vertlife.org/sharktree/610.tree.10Cal.RAxML.BS.nex', 'sharktree.nex')
```

```{r}
sharks <- ape::read.nexus('sharktree.nex')
bonys <- ape::read.tree('betancur_r.tre')
bonys2 <- fishtree::fishtree_phylogeny()
```
Have to rename teh bony fish labels, they have family and G IDs in there.

```{r}
bonys$tip.label <- word(bonys$tip.label, start = 2, end = 3, sep = '_')
```

Do we have an intersection of labels? Otherwise we cannot merge

```{r}
intersect(bonys$tip.label, sharks$tip.label)
```

```{r}
big_tree <- ape::bind.tree(bonys, sharks)
big_tree <- ape::bind.tree(big_tree, bonys2)

```

```{r}
ggtree(big_tree, branch.length = 'none', layout = 'circular')
```

Let's look at how different those branch lengths are:
```{r}
ggtree(big_tree,  layout = 'circular')
```
ew!

Now these trees have some species appear twice. That'll mess up our species placing later so let's keep only one of them.

```{r}
duplicate_tips <- big_tree$tip.label[duplicated(big_tree$tip.label)]
duplicate_tips
```
```{r}
big_tree_no_duplicates <- drop.tip(big_tree, tip = duplicate_tips, trim.internal = TRUE)
```


```{r}
ape::write.tree(phy = big_tree_no_duplicates, 'big_tree.Actinopterygii.Chondrichtyes.tre')
```


# Adding our species to the fish tree


We follow the tutorial in https://cran.r-project.org/web/packages/RRphylo/vignettes/Tree-Manipulation.html

We need a table with columns bind, reference, and poly.

reference: tip label to bind to 
bind: new tip label to add to the reference
poly: TRUE/FALSE whether to create a polytomous clade, I think we can always set that to FALSE? TODO investigate

```{r}
species_in_tree <- big_tree_no_duplicates$tip.label %>% unique()
marine_verts <- readLines('marine_verts.txt') # fish genomes_aust native and endemic.xlsx

missing_verts <- setdiff(marine_verts, species_in_tree)
print(paste0('missing verts: ', length(missing_verts), ' marine verts: ', length(marine_verts), ' species in tree: ', length(species_in_tree)))
# Conversely, the merged tree has a bunch of non-marine verts - Homo sapiens, Mus musculus, etc.
# those will be useful when we add marine vertebrates!

# now pull out one species per genus from our tree, those we will bind to
species_in_tree_tibble <- tibble(reference = species_in_tree) %>% 
  mutate(genus = word(reference, start =1 ,end = 1, sep = '_')) %>% 
  group_by(genus) %>% 
  slice_head(n=1) %>% ungroup()

dato <- tibble(bind = missing_verts) %>% 
  mutate(bind_g = word(bind, start =1 , end = 1, sep ='_')) %>% 
  left_join(species_in_tree_tibble, by = c('bind_g' = 'genus')) %>% 
    filter(!is.na(reference)) %>% 
  mutate(poly = FALSE)
```
If we have genera in the dato frame that are not in the tree we're binding to (like *Homo*), then tree.merger() will stop asking us to provide a source tree where that genus should be placed.

We don't have that source tree, so let's remove species we want to add that do not have their genus in the 
species tree. Hopefully as we add more trees we'll be able to place those species.


```{r}
genera_in_tree <- species_in_tree %>% word(1, 1, sep ='_') %>% unique()
dato <- dato %>% filter(bind_g %in% genera_in_tree)
```

The following runs for ~5 minutes:

```{r}
big_tree_no_duplicates_merged <- RRphylo::tree.merger(backbone=big_tree_no_duplicates,data=as.data.frame(dato %>% select(-bind_g)),plot=FALSE)

```
```{r}
ape::write.tree(phy = big_tree_no_duplicates_merged, 'big_tree.Actinopterygii.Chondrichtyes.withMarineVerts.tre')

```

## Adding species for which the genera are not in the tree

We have a few species where those genera are not in the tree. What we'll do instead
is chuck the species at the root of the family.

So what we have to do:
- get the species that are not in the big tree now, get their genera
- for each genus, get the family
- calculate the MRCA for all family members in the tree
- insert the genus/species at the root of the MRCA


so like this, calculating MRCA of species A and B and inserting there:

```

    --- A
    |
----|
    |
    --- B

```

becomes

```
     --- A
     |
|----|
|    |
|    --- B
|
|------- Added species

```

again, with a random branch length.


```{r}
getMRCA(tree, c('t2', 't1'))
tree <- bind.tip(tree, tip.label="potato",
where=21, position=1)

```

# Adding Aves

# Adding Mammalia

# Adding seasnakes
  
sssssss i'm a snake

